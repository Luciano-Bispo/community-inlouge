<?xml version="1.0"?>
<doc>
    <assembly>
        <name>api-comil</name>
    </assembly>
    <members>
        <member name="F:api_comil.Controllers.ComunidadeController.repositorio">
            <summary>
            Método resposável por fazer busca de todas as comunidade no banco de dados
            </summary>
            <returns>Todas as comunidades cadastradas no banco de dados</returns>
        </member>
        <member name="M:api_comil.Controllers.ComunidadeController.Get(System.Int32)">
            <summary>
            Método resposável por fazer busca de uma comunidade expecífica através do parâmetro - ID
            </summary>
            <param name="id">Recebe i ID da comunidade</param>
            <returns>Comundade correspondente ao ID digitado</returns>
        </member>
        <member name="M:api_comil.Controllers.ComunidadeController.Put(System.Int32,api_comil.Models.Comunidade)">
            <summary>
            Método resposável por fazer alteração na comunidade encontrada através do ID ou nome de uma comunidade 
            </summary>
            <param name="id">Recebe ID da comunidade</param>
            <param name="comunidade">Recebe o objeto comunidade</param>
            <returns>Comunidade alterada</returns>
        </member>
        <member name="M:api_comil.Controllers.ComunidadeController.Delete(System.Int32)">
            <summary>
            Método resposável por deletar uma comunidade, mudando seu status deixando-a desabilitada
            </summary>
            <param name="id">Id da comunidade</param>
            <returns>Comunidade que foi desativada do sistema</returns>
        </member>
        <member name="M:api_comil.Controllers.ComunidadeController.Post(api_comil.Models.Comunidade)">
            <summary>
            Método responsável por cadastrar uma comunidade
            </summary>
            <param name="comunidade">Objeto comunidade</param>
            <returns>Comunidade cadastrada</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.Post(api_comil.Models.Evento)">
            <summary>
            Método de cadastrar Evento 
            </summary>
            <returns>Retorna evento cadastrado</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.Get(System.Int32)">
            <summary>
            Método de busca de um evento através de um Id
            </summary>
            <param name="id">Id do evento</param>
            <returns>Comunidade correspondente ao Id</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.Accept(System.Int32,System.Int32)">
            <summary>
            Método onde um administradoe aceita um evento
            </summary>
            <param name="idEvento">Id do evento</param>
            <param name="idResp"> Id do resposável pelo evento</param>
            <returns>Evento aprovado</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.Put(System.Int32,api_comil.Models.Evento)">
            <summary>
            Método para atualização de dados de um evento
            </summary>
            <param name="id">Id do evento</param>
            <param name="evento">Objeto evento</param>
            <returns>Evento com dados atualizados</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.Reject(System.Int32,System.Int32)">
            <summary>
            Método onde um administrador recusa um evento
            </summary>
            <param name="idEvento">Id do evento</param>
            <param name="idResp">Id do responsável pelo evento</param>
            <returns>Evento rejeitado</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.Mouth">
            <summary>
            Método de busca de eventos do mês correspondente
            </summary>
            <returns>eventos do mês</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.MyEventsAccept(System.Int32)">
            adm
             <summary>
             Método de busca dos eventos aprovados pelo respectivo administrador
             </summary>
             <param name="id">Id do administrador</param>
             <returns>Eventos que o respectivo administrador aceitou</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.MyEventsReject(System.Int32)">
            <summary>
            Método dos eventos recusados pelo respectivo administrador
            </summary>
            <param name="id">Id do administrador</param>
            <returns>Eventos recusados do respectivo administrador</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.PendingMounth(System.Int32)">
            <summary>
            Método de busca dos eventos que estão pendentes
            </summary>
            <param name="id">Id do evento</param>
            <returns>Eventos pendentes</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.EventByCategory(System.Int32)">
            <summary>
            Método de busca de evento através de uma categoria expecífica
            </summary>
            <param name="id">Id da categoria</param>
            <returns>Eventos correspondentes à categoria</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.PendingUser(System.Int32)">
            <summary>
            Método de eventos pendentes do usuário
            </summary>
            <param name="id">Id do evento</param>
            <returns>Retorna os eventos pendenetes do usuário</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.RealizeUser(System.Int32)">
            <summary>
            Método de busca dos eventos já realizados pelo usuário
            </summary>
            <param name="id">Id do evento</param>
            <returns>Eventos realizados pelo usuário</returns>
        </member>
        <member name="M:api_comil.Controllers.EventoController.ApprovedUser(System.Int32)">
            <summary>
            Método de busca dos eventos do usuário que foram aprovados
            </summary>
            <param name="id">Id do evento</param>
            <returns>Eventos do usuário que estão aprovados</returns>
        </member>
        <member name="M:api_comil.Controllers.LoginController.Login(api_comil.ViewModel.LoginViewModel)">
            <summary>
            Método de login na plataforma
            </summary>
            <param name="login">Email e senha</param>
            <returns>Token</returns>
        </member>
        <member name="M:api_comil.Controllers.TipoUsuarioController.Get">
            <summary>
            Método de Listar tipo de Usuário 
            </summary>
            <returns>Retorna o tipo de usuário</returns>
        </member>
        <member name="M:api_comil.Controllers.TipoUsuarioController.Get(System.Int32)">
            <summary>
            Método para encontrar tipo de usuário(nível de acesso) pelo id.
            </summary>
            <param name="id">Recebe id pelo tipo de usuário</param>
            <returns>Retorna o tipo de usuário</returns>
        </member>
        <member name="M:api_comil.Controllers.UsuarioController.Get(System.Int32)">
            <summary>
            Método de busca de usuário através do Id
            </summary>
            <param name="id">Id do usuário</param>
            <returns>Usuário correspondente ao Id</returns>
        </member>
        <member name="M:api_comil.Controllers.UsuarioController.Post(api_comil.Models.Usuario)">
            <summary>
             Método de cadastro de usuário
            </summary>
            <param name="usuario">Objeto Usuário</param>
            <returns>Usuario cadastrado</returns>
        </member>
        <member name="M:api_comil.Controllers.UsuarioController.Delete(System.Int32)">
            <summary>
            Método para deletar um usuário
            </summary>
            <param name="id">Id do usuário</param>
            <returns>Retorna usuário deletado</returns>
        </member>
        <member name="M:api_comil.Controllers.UsuarioController.Put(api_comil.Models.Usuario)">
            <summary>
            Método para atualização de dados do usuário
            </summary>
            <param name="usuario">Objeto Usuário</param>
            <returns>Usuário alterado</returns>
        </member>
    </members>
</doc>
